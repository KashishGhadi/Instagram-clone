// Import required modules
const express = require('express');
const passport = require('passport');
const InstagramStrategy = require('passport-instagram').Strategy;

// Create an instance of Express
const app = express();

// Configure Passport to use Instagram strategy
passport.use(new InstagramStrategy({
    clientID: 'YOUR_INSTAGRAM_CLIENT_ID',
    clientSecret: 'YOUR_INSTAGRAM_CLIENT_SECRET',
    callbackURL: 'http://localhost:3000/auth/instagram/callback' // Update with your callback URL
  },
  function(accessToken, refreshToken, profile, done) {
    // This is where you would typically save the user profile to a database
    // For simplicity, we'll just pass the profile to the done callback
    return done(null, profile);
  }
));

// Serialize and deserialize user functions for Passport
passport.serializeUser(function(user, done) {
  done(null, user);
});

passport.deserializeUser(function(obj, done) {
  done(null, obj);
});

// Middleware for initializing Passport
app.use(passport.initialize());

// Route for initiating Instagram authentication
app.get('/auth/instagram',
  passport.authenticate('instagram'));

// Route for handling Instagram callback
app.get('/auth/instagram/callback',
  passport.authenticate('instagram', { failureRedirect: '/login' }),
  function(req, res) {
    // Successful authentication, redirect home or wherever you want
    res.redirect('/');
  });

// Example protected route
app.get('/', function(req, res) {
  if (req.isAuthenticated()) {
    res.send('Welcome, ' + req.user.displayName + '!');
  } else {
    res.redirect('/auth/instagram');
  }
});

// Start the server
app.listen(3000, () => {
  console.log('Server is running on http://localhost:3000');
});
